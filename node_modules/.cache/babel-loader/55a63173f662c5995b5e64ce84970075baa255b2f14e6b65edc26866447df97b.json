{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartInitialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: cartInitialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      var _state$items;\n      const newItem = action.payload;\n      const existingItem = (_state$items = state.items) === null || _state$items === void 0 ? void 0 : _state$items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        var _state$items2;\n        (_state$items2 = state.items) === null || _state$items2 === void 0 ? void 0 : _state$items2.push({\n          title: newItem.title,\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          total: newItem.price\n        });\n        console.log(\"Added new item to cart\");\n      } else {\n        existingItem.quantity++;\n        existingItem.total += newItem.price;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      console.log(id);\n      const existingItem = state.items.find(item => item.id === id);\n      console.log(existingItem);\n      if (!existingItem) {\n        return;\n      }\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.total -= existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartInitialState","items","totalQuantity","changed","cartSlice","name","initialState","reducers","replaceCart","state","action","payload","addToCart","_state$items","newItem","existingItem","find","item","id","_state$items2","push","title","price","quantity","total","console","log","removeFromCart","filter","cartActions","actions"],"sources":["/Users/xiaoweizhao/Desktop/Udemy Course/react-complete-guide-course-resources-main/code/20 Advanced Redux/01-starting-project/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartInitialState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: cartInitialState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items?.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items?.push({\n          title: newItem.title,\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          total: newItem.price,\n        });\n        console.log(\"Added new item to cart\");\n      } else {\n        existingItem.quantity++;\n        existingItem.total += newItem.price;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      console.log(id);\n      const existingItem = state.items.find((item) => item.id === id);\n      console.log(existingItem);\n      if (!existingItem) {\n        return;\n      }\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.total -= existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO,CAACT,aAAa;MAClDO,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;IACpC,CAAC;IACDW,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAAA,IAAAG,YAAA;MACvB,MAAMC,OAAO,GAAGJ,MAAM,CAACC,OAAO;MAC9B,MAAMI,YAAY,IAAAF,YAAA,GAAGJ,KAAK,CAACR,KAAK,cAAAY,YAAA,uBAAXA,YAAA,CAAaG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACxET,KAAK,CAACP,aAAa,EAAE;MACrBO,KAAK,CAACN,OAAO,GAAG,IAAI;MAEpB,IAAI,CAACY,YAAY,EAAE;QAAA,IAAAI,aAAA;QACjB,CAAAA,aAAA,GAAAV,KAAK,CAACR,KAAK,cAAAkB,aAAA,uBAAXA,aAAA,CAAaC,IAAI,CAAC;UAChBC,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBH,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdI,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAEV,OAAO,CAACQ;QACjB,CAAC,CAAC;QACFG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACvC,CAAC,MAAM;QACLX,YAAY,CAACQ,QAAQ,EAAE;QACvBR,YAAY,CAACS,KAAK,IAAIV,OAAO,CAACQ,KAAK;MACrC;IACF,CAAC;IACDK,cAAcA,CAAClB,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMQ,EAAE,GAAGR,MAAM,CAACC,OAAO;MACzBc,OAAO,CAACC,GAAG,CAACR,EAAE,CAAC;MACf,MAAMH,YAAY,GAAGN,KAAK,CAACR,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DO,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;MACzB,IAAI,CAACA,YAAY,EAAE;QACjB;MACF;MACAN,KAAK,CAACP,aAAa,EAAE;MACrBO,KAAK,CAACN,OAAO,GAAG,IAAI;MAEpB,IAAIY,YAAY,CAACQ,QAAQ,KAAK,CAAC,EAAE;QAC/Bd,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAAC2B,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACLH,YAAY,CAACQ,QAAQ,EAAE;QACvBR,YAAY,CAACS,KAAK,IAAIT,YAAY,CAACO,KAAK;MAC1C;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAC5C,eAAe1B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}