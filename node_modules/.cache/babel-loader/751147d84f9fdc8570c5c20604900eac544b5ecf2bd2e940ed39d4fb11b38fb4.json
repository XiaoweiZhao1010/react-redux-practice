{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const res = await fetch(\"https://udemy-project-77b1c-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"GET\"\n      });\n      if (!res.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n      const data = await res.json();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n      return data;\n    };\n    try {\n      await fetchData();\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n      return;\n    }\n  };\n};\nexport const sendCartData = cartData => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const res = await fetch(\"https://udemy-project-77b1c-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartData)\n      });\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n      return;\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","res","fetch","method","ok","Error","data","json","showNotification","status","title","message","error","sendCartData","cartData","sendRequest","body","JSON","stringify"],"sources":["/Users/xiaoweizhao/Desktop/Udemy Course/react-complete-guide-course-resources-main/code/20 Advanced Redux/01-starting-project/src/components/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const res = await fetch(\n        \"https://udemy-project-77b1c-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"GET\",\n        }\n      );\n      if (!res.ok) {\n        throw new Error(\"Fetching cart data failed.\");\n      }\n      const data = await res.json();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n      return data;\n    };\n    try {\n      await fetchData();\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n      return;\n    }\n  };\n};\nexport const sendCartData = (cartData) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n    const sendRequest = async () => {\n      const res = await fetch(\n        \"https://udemy-project-77b1c-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cartData),\n        }\n      );\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n      return;\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,mEAAmE,EACnE;QACEC,MAAM,EAAE;MACV,CACF,CAAC;MACD,IAAI,CAACF,GAAG,CAACG,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7BR,QAAQ,CACNF,SAAS,CAACW,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MACD,OAAOL,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAMN,SAAS,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdb,QAAQ,CACNF,SAAS,CAACW,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MACD;IACF;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAME,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAO,MAAOf,QAAQ,IAAK;IACzBA,QAAQ,CACNF,SAAS,CAACW,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMd,GAAG,GAAG,MAAMC,KAAK,CACrB,mEAAmE,EACnE;QACEC,MAAM,EAAE,KAAK;QACba,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;MAC/B,CACF,CAAC;MACD,IAAI,CAACb,GAAG,CAACG,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IACD,IAAI;MACF,MAAMU,WAAW,CAAC,CAAC;MACnBhB,QAAQ,CACNF,SAAS,CAACW,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,QAAQ,CACNF,SAAS,CAACW,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MACD;IACF;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}